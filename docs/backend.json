{
  "entities": {
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns this expense."
        },
        "date": {
          "type": "string",
          "description": "The date the expense was incurred.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "category": {
          "type": "string",
          "description": "The category of the expense (e.g., 'Rent', 'Supplies')."
        },
        "description": {
          "type": "string",
          "description": "A description of the expense."
        }
      },
      "required": [
        "id",
        "userId",
        "date",
        "amount",
        "category"
      ]
    },
    "Revenue": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Revenue",
      "type": "object",
      "description": "Represents a revenue record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the revenue."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns this revenue."
        },
        "date": {
          "type": "string",
          "description": "The date the revenue was received.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "The amount of the revenue."
        },
        "category": {
          "type": "string",
          "description": "The category of the revenue (e.g., 'Sales', 'Services')."
        },
        "description": {
          "type": "string",
          "description": "A description of the revenue."
        }
      },
      "required": [
        "id",
        "userId",
        "date",
        "amount",
        "category"
      ]
    },
    "Appointment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Appointment",
      "type": "object",
      "description": "Represents a scheduled appointment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the appointment."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns this appointment."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the appointment.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the appointment.",
          "format": "date-time"
        },
        "title": {
          "type": "string",
          "description": "The title of the appointment."
        },
        "description": {
          "type": "string",
          "description": "A description of the appointment."
        }
      },
      "required": [
        "id",
        "userId",
        "startTime",
        "endTime",
        "title"
      ]
    }
  },
  "auth": {
    "providers": [
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/entities/Expense"
          },
          "description": "Stores expense records. Each record has a userId field to indicate ownership. Rules enforce that only the owner can access it.",
          "params": [
            {
              "name": "expenseId",
              "description": "The unique identifier of the expense record."
            }
          ]
        }
      },
      {
        "path": "/revenues/{revenueId}",
        "definition": {
          "entityName": "Revenue",
          "schema": {
            "$ref": "#/entities/Revenue"
          },
          "description": "Stores revenue records. Each record has a userId field to indicate ownership. Rules enforce that only the owner can access it.",
          "params": [
            {
              "name": "revenueId",
              "description": "The unique identifier of the revenue record."
            }
          ]
        }
      },
      {
        "path": "/appointments/{appointmentId}",
        "definition": {
          "entityName": "Appointment",
          "schema": {
            "$ref": "#/entities/Appointment"
          },
          "description": "Stores appointment records. Each record has a userId field to indicate ownership. Rules enforce that only the owner can access it.",
          "params": [
            {
              "name": "appointmentId",
              "description": "The unique identifier of the appointment record."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to be flat, with top-level collections for each entity type (e.g., 'expenses', 'revenues'). This approach, combined with a `userId` field in each document, provides a robust and scalable security model. Security rules can then be defined on each collection to ensure that a user can only query for documents where their `userId` matches, and they can only perform writes (create, update, delete) on documents they own. This avoids complex, nested security rules and prevents insecure list operations by design. It's a standard, recommended pattern for multi-tenant applications on Firestore."
  }
}
