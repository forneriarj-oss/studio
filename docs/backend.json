{
  "entities": {
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "category": {
          "type": "string",
          "description": "The category of the expense (e.g., 'Rent', 'Supplies')."
        },
        "date": {
          "type": "string",
          "description": "The date the expense was incurred.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the expense."
        }
      },
      "required": [
        "id",
        "amount",
        "category",
        "date",
        "description"
      ]
    },
    "Revenue": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Revenue",
      "type": "object",
      "description": "Represents a revenue record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the revenue."
        },
        "amount": {
          "type": "number",
          "description": "The amount of revenue received."
        },
        "category": {
          "type": "string",
          "description": "The category of the revenue (e.g., 'Sales', 'Services')."
        },
        "date": {
          "type": "string",
          "description": "The date the revenue was received.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the revenue."
        }
      },
      "required": [
        "id",
        "amount",
        "category",
        "date",
        "description"
      ]
    },
    "Appointment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Appointment",
      "type": "object",
      "description": "Represents a scheduled appointment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the appointment."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the appointment.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the appointment.",
          "format": "date-time"
        },
        "subject": {
          "type": "string",
          "description": "The subject or title of the appointment."
        },
        "description": {
          "type": "string",
          "description": "A description of the appointment."
        }
      },
      "required": [
        "id",
        "startTime",
        "endTime",
        "subject",
        "description"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores expense records for each user. Path-based ownership ensures only the authenticated user can access their expenses.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier of the expense record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/revenue/{revenueId}",
        "definition": {
          "entityName": "Revenue",
          "schema": {
            "$ref": "#/backend/entities/Revenue"
          },
          "description": "Stores revenue records for each user. Path-based ownership ensures only the authenticated user can access their revenue.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "revenueId",
              "description": "The unique identifier of the revenue record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/appointments/{appointmentId}",
        "definition": {
          "entityName": "Appointment",
          "schema": {
            "$ref": "#/backend/entities/Appointment"
          },
          "description": "Stores appointment records for each user. Path-based ownership ensures only the authenticated user can access their appointments.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "appointmentId",
              "description": "The unique identifier of the appointment record."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support a basic ERP system for small businesses, focusing on revenue, expenses, appointments, and profit calculation. It leverages path-based ownership for user-specific data to ensure security and simplicity. The structure avoids hierarchical authorization dependencies by not using `get()` calls in security rules, thus enabling atomic operations.  \n\nExpenses, revenue, and appointments are stored under each user's document. This structural segregation ensures that only the authenticated user can access their own data. This design inherently supports secure `list` operations as rules only need to check the `request.auth.uid` against the path.\n\nThis approach enforces data isolation and simplifies security rules, aligning with the DBAC principle (Database-based Access Control)."
  }
}