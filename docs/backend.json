{
  "entities": {
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense record."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "category": {
          "type": "string",
          "description": "The category of the expense (e.g., 'Rent', 'Utilities', 'Salaries')."
        },
        "date": {
          "type": "string",
          "description": "The date the expense was incurred.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the expense."
        },
        "businessId": {
          "type": "string",
          "description": "Reference to Business. (Relationship: Business 1:N Expense)"
        }
      },
      "required": [
        "id",
        "amount",
        "category",
        "date",
        "businessId"
      ]
    },
    "Revenue": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Revenue",
      "type": "object",
      "description": "Represents a revenue record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the revenue record."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the revenue."
        },
        "category": {
          "type": "string",
          "description": "The category of the revenue (e.g., 'Sales', 'Services')."
        },
        "date": {
          "type": "string",
          "description": "The date the revenue was received.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the revenue."
        },
        "businessId": {
          "type": "string",
          "description": "Reference to Business. (Relationship: Business 1:N Revenue)"
        }
      },
      "required": [
        "id",
        "amount",
        "category",
        "date",
        "businessId"
      ]
    },
    "Appointment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Appointment",
      "type": "object",
      "description": "Represents a scheduled appointment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the appointment."
        },
        "title": {
          "type": "string",
          "description": "The title of the appointment."
        },
        "description": {
          "type": "string",
          "description": "A description of the appointment."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the appointment.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the appointment.",
          "format": "date-time"
        },
        "location": {
          "type": "string",
          "description": "The location of the appointment."
        },
        "businessId": {
          "type": "string",
          "description": "Reference to Business. (Relationship: Business 1:N Appointment)"
        }
      },
      "required": [
        "id",
        "title",
        "startTime",
        "endTime",
        "businessId"
      ]
    },
    "Business": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Business",
      "type": "object",
      "description": "Represents a business within the ERP system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the business."
        },
        "name": {
          "type": "string",
          "description": "The name of the business."
        },
        "description": {
          "type": "string",
          "description": "A description of the business."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/businesses/{businessId}",
        "definition": {
          "entityName": "Business",
          "schema": {
            "$ref": "#/backend/entities/Business"
          },
          "description": "Stores businesses owned by a specific user. Path-based ownership simplifies security rules.",
          "params": [
            {
              "name": "userId",
              "description": "The ID of the user who owns the business."
            },
            {
              "name": "businessId",
              "description": "The ID of the business."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/businesses/{businessId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores expense records for a specific business. Path-based ownership ensures only the owner can access the expenses.",
          "params": [
            {
              "name": "userId",
              "description": "The ID of the user who owns the business."
            },
            {
              "name": "businessId",
              "description": "The ID of the business."
            },
            {
              "name": "expenseId",
              "description": "The ID of the expense record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/businesses/{businessId}/revenues/{revenueId}",
        "definition": {
          "entityName": "Revenue",
          "schema": {
            "$ref": "#/backend/entities/Revenue"
          },
          "description": "Stores revenue records for a specific business. Path-based ownership ensures only the owner can access the revenues.",
          "params": [
            {
              "name": "userId",
              "description": "The ID of the user who owns the business."
            },
            {
              "name": "businessId",
              "description": "The ID of the business."
            },
            {
              "name": "revenueId",
              "description": "The ID of the revenue record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/businesses/{businessId}/appointments/{appointmentId}",
        "definition": {
          "entityName": "Appointment",
          "schema": {
            "$ref": "#/backend/entities/Appointment"
          },
          "description": "Stores appointment records for a specific business. Path-based ownership ensures only the owner can access the appointments.",
          "params": [
            {
              "name": "userId",
              "description": "The ID of the user who owns the business."
            },
            {
              "name": "businessId",
              "description": "The ID of the business."
            },
            {
              "name": "appointmentId",
              "description": "The ID of the appointment record."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support BizView's core features while prioritizing security, scalability, and ease of debugging.  The structure leverages path-based ownership for user-specific data related to businesses, expenses, revenues, and appointments. This approach ensures Authorization Independence and simplifies security rules. Each entity is stored in a subcollection under the corresponding business, which in turn is owned by the user.\n\nAuthorization Independence: Achieved through path-based ownership.  For example, expenses are stored under `/users/{userId}/businesses/{businessId}/expenses/{expenseId}`.  Access control can be determined solely based on the path without needing to read data from parent documents.\n\nQAPs Support: Secure list operations are enabled by structural segregation. Since all documents within a subcollection share the same security requirements, listing expenses, revenues, or appointments under a specific business is secure without complex filtering rules."
  }
}